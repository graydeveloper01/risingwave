control substitution on

# create a cdc source job, which format fixed to `FORMAT PLAIN ENCODE JSON`
statement ok
CREATE SOURCE mssql_source WITH (
    connector = 'sqlserver-cdc',
    hostname = '${MSSQL_HOST:sqlserver-server}',
    port = '${MSSQL_PORT:1433}',
    username = '${MSSQL_USER:$USER}',
    password = '${MSSQL_PASSWORD}',
    database.name = 'mydb',
);

statement error Should not create MATERIALIZED VIEW or SELECT directly on shared CDC source
create materialized view mv as select * from mssql_source;

statement error The upstream table name must contain schema name prefix*
CREATE TABLE shared_orders (
    order_id INT,
    order_date BIGINT,
    customer_name VARCHAR,
    price DECIMAL,
    product_id INT,
    order_status SMALLINT,
    PRIMARY KEY (order_id)
)  from mssql_source table 'orders';

statement ok
CREATE TABLE shared_orders (
    order_id INT,
    order_date BIGINT,
    customer_name VARCHAR,
    price DECIMAL,
    product_id INT,
    order_status SMALLINT,
    PRIMARY KEY (order_id)
)  from mssql_source table 'dbo.orders';

statement ok
CREATE TABLE shared_single_type (
    id INT,
    c_time time,
    PRIMARY KEY (id)
) from mssql_source table 'dbo.single_type';

statement ok
CREATE TABLE shared_sqlserver_all_data_types (
    id INT,
    c_bit BOOLEAN,
    c_tinyint SMALLINT,
    c_smallint SMALLINT,
    c_int INTEGER,
    c_bigint BIGINT,
    c_decimal DECIMAL,
    c_real REAL,
    c_float FLOAT,
    c_varchar VARCHAR,
    c_varbinary BYTEA,
    c_date DATE,
    c_time TIME,
    c_datetime2 TIMESTAMP,
    c_datetimeoffset TIMESTAMPTZ,
    PRIMARY KEY (id)
) from mssql_source table 'dbo.sqlserver_all_data_types';

statement ok
create materialized view shared_orders_cnt as select count(*) as cnt from shared_orders;

statement ok
create materialized view shared_single_type_cnt as select count(*) as cnt from shared_single_type;

statement ok
create materialized view shared_sqlserver_all_data_types_cnt as select count(*) as cnt from shared_sqlserver_all_data_types;

# sleep to ensure the data in mssql tables is consumed from Debezium message instead of backfill.
sleep 10s
